name: CI Build

on:
    push:
        branches: ["main"]

jobs: 
    build-linux:
        runs-on: ubuntu-latest

        steps: 
            - name: Generate build number
              id: buildnum
              uses: onyxmueller/build-tag-number@v1
              with:
                token: ${{secrets.github_token}}    
            - name: Checkout
              uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Setup vlang
              uses: vlang/setup-v@v1.4

            - name: Raylib depends
              run: sudo apt-get install -y libasound2-dev libx11-dev libxrandr-dev libxi-dev libgl1-mesa-dev libglu1-mesa-dev libxcursor-dev libxinerama-dev libwayland-dev libxkbcommon-dev

            - name: Build raylib
              working-directory: ./client
              run: make

            - name: Build production
              working-directory: ./client
              run: make build
              
            - name: Finalization
              run: |
               mkdir -p ./client/build
               cp -r ./client/assets ./client/build/assets
               mv ./client/client ./client/build/Chronical
               zip -r ./client/build-linux.zip ./client/build 

            - name: Upload artifacts 
              uses: actions/upload-artifact@v4
              with:
                name: linux
                path: ./client/build
            
            - name: Create Github Release
              uses: ncipollo/release-action@v1
              with:
                artifacts: "./client/build-linux.zip"
                replacesArtifacts: false
                token: ${{ secrets.TOKEN }}
                allowUpdates: true
                name: Dev ${{ steps.buildnum.outputs.build_number }}
    build-windows:
      runs-on: windows-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            submodules: recursive
        
        - name: MSVC dev cmd
          uses: ilammy/msvc-dev-cmd@v1

        - name: Setup vlang
          uses: vlang/setup-v@v1.4
        
        - name: Build production
          working-directory: client
          run: v -cc msvc -autofree -prod .

        - name: Finalization
          run: |
            mkdir client\build
            xcopy /E /I client\assets client\build\assets
            move client\client.exe client\build\Chronical.exe
          shell: cmd

        - name: Upload artifacts 
          uses: actions/upload-artifact@v4
          with:
            name: windows
            path: ./client/build
        
        
        

        
